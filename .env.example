# Base domain
DOMAIN=mygitpod.example.com

# Set the name of the GCP Project. If the project does not exists, it will create a new one.
# https://cloud.google.com/resource-manager/docs/creating-managing-projects
PROJECT_NAME=gitpod
# Set details about the billing account
# https://cloud.google.com/billing/docs/concepts
BILLING_ACCOUNT=XXXXX-XXXXX-XXXXX

# Set the region of the cluster's control plane and nodes
# https://cloud.google.com/kubernetes-engine/docs/concepts/regional-clusters
REGION=us-central1
# Set the zones in the region.
# By default (empty value) it will distribute the nodes in the region (at least three zones)
# https://cloud.google.com/compute/docs/regions-zones#available
ZONES=

# The name of the GKE cluster
CLUSTER_NAME=gitpod
# Set if we want to use Preemptible nodes
# Preemptible VMs are Compute Engine VM instances that last a maximum of 24 hours in general.
# https://cloud.google.com/kubernetes-engine/docs/how-to/preemptible-vms
PREEMPTIBLE=false

# The email address for cert-manager wildcard SSL certificate
LETSENCRYPT_EMAIL=my@email
# Set if we want to use Cloud DNS to manage the DNS service.
# https://cloud.google.com/dns
SETUP_MANAGED_DNS=true

# The name of the Cloud SQL - Mysql instance for Gitpod.
# If the instance already exists, we will create a new Gitpod database and user.
# https://cloud.google.com/sql
MYSQL_INSTANCE_NAME=gitpod

# The name of the GCS bucket where the container images that gitpod creates are stored
# If there is no value we create a new bucket with the name "container-registry-<cluster name>-<account ID>"
CONTAINER_REGISTRY_BUCKET=

# The path to the file containing the credentials to pull images from private container registries.
# https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
IMAGE_PULL_SECRET_FILE=

# List of registries (hostnames) that users get access to by default allowed to be used in base images.
# Default: only images from docker.io
IMAGE_REGISTRY_WHITELIST=
